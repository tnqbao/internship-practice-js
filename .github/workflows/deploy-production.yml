name: production-deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
#
#      - name: Install Tailscale
#        run: |
#          curl -fsSL https://tailscale.com/install.sh | sh
#
#      - name: Start Tailscale and authenticate
#        run: |
#          sudo tailscaled &
#          sleep 3
#          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTH_KEY }}
#          sleep 5
#
#      - name: Set up SSH key
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
#
#      - name: Download .env from server
#        run: |
#          scp ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/tnqbao/.enviroment/green-mind-backend/.env ./deploy/k8s/production/.env
#
#      - name: Download kubeconfig.yaml from server
#        run: |
#          mkdir -p ./deploy/k8s/production
#          scp ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/.secret/k8s/kubeconfig.yaml ./deploy/k8s/production/kubeconfig.yaml
#
#      - name: Set KUBECONFIG environment variable
#        run: echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
#
#      - name: Check Kubernetes access
#        run: kubectl get nodes
#
#      - name: Make scripts executable
#        run: |
#          chmod +x ./deploy/k8s/production/apply_envsubst.sh
#          chmod +x ./deploy/k8s/production/apply.sh
#
#      - name: Render manifests with envsubst
#        working-directory: ./deploy/k8s/production
#        run: ./apply_envsubst.sh
#
#      - name: Apply manifests to Kubernetes
#        working-directory: ./deploy/k8s/production
#        run: ./apply.sh